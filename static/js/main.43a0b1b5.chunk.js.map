{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyUp","e","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,2BAFT,EAaEC,YAAc,SAACC,GACTA,GACF,EAAKC,SAAS,CAAEH,IAAI,4BAAD,OAA8BE,EAAEF,IAAhC,QAfzB,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,eAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,eAV/C,oBAmBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BR,UAxBrC,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.43a0b1b5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    key: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    if (e) {\n      this.setState({ key: `The last pressed key is [${e.key}]` });\n    }\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{key}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}